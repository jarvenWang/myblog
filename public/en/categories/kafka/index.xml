<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>kafka on Home</title>
    <link>http://ingress.test1.com/en/categories/kafka/</link>
    <description>Recent content in kafka on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>wang_jin_bao@163.com (wangjinbao)</managingEditor>
    <webMaster>wang_jin_bao@163.com (wangjinbao)</webMaster>
    <copyright>©2024, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 17 May 2022 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://ingress.test1.com/en/categories/kafka/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>golang中使用kafka的综合指南</title>
        <link>http://ingress.test1.com/en/stack/knowledge/kafkatips/</link>
        <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
        <author>wang_jin_bao@163.com (wangjinbao)</author>
        <atom:modified>Tue, 17 May 2022 00:00:00 +0000</atom:modified>
        <guid>http://ingress.test1.com/en/stack/knowledge/kafkatips/</guid>
        <description>背景 kafka 是一个比较流行的 分布式 、 可拓展 、 高性能 、 可靠性 的流处理平台。 在处理kafka的数据时，这里有 确保处理效率和可靠性的 多种最佳实践。 下面介</description>
        
        <dc:creator>wangjinbao</dc:creator>
        
        
        
        
          
            
              <category>knowledge</category>
            
          
        
        
          
            
              <category>kafka</category>
            
          
        
        
      </item>
      
      <item>
        <title>Kafka的重复消费和消息丢失问题</title>
        <link>http://ingress.test1.com/en/stack/knowledge/kafkaquestion/</link>
        <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
        <author>wang_jin_bao@163.com (wangjinbao)</author>
        <atom:modified>Tue, 17 May 2022 00:00:00 +0000</atom:modified>
        <guid>http://ingress.test1.com/en/stack/knowledge/kafkaquestion/</guid>
        <description>介绍 在Kafka中，生产者（Producer） 和 消费者（Consumer） 是通过 发布订阅模式 进行协作的，生产者将消息发送到Kafka集群，而</description>
        
        <dc:creator>wangjinbao</dc:creator>
        
        
        
        
          
            
              <category>knowledge</category>
            
          
        
        
          
            
              <category>kafka</category>
            
          
        
        
      </item>
      
      <item>
        <title>微服务架构之幂等性问题</title>
        <link>http://ingress.test1.com/en/stack/knowledge/manyquest/</link>
        <pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate>
        <author>wang_jin_bao@163.com (wangjinbao)</author>
        <atom:modified>Tue, 17 May 2022 00:00:00 +0000</atom:modified>
        <guid>http://ingress.test1.com/en/stack/knowledge/manyquest/</guid>
        <description>前言 小伙伴们有没有遇到过生产环境经常出现过重复的数据？在排查问题的时候，数据又是正常的。这个是何解呢？怎么会出现这种情况，而且还很难排查问题</description>
        
        <dc:creator>wangjinbao</dc:creator>
        
        
        
        
          
            
              <category>knowledge</category>
            
          
        
        
          
            
              <category>kafka</category>
            
          
        
        
      </item>
      
      <item>
        <title>zookeeper、kafka、kafka-manager安装</title>
        <link>http://ingress.test1.com/en/stack/knowledge/kafka/</link>
        <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
        <author>wang_jin_bao@163.com (wangjinbao)</author>
        <atom:modified>Mon, 16 May 2022 00:00:00 +0000</atom:modified>
        <guid>http://ingress.test1.com/en/stack/knowledge/kafka/</guid>
        <description>新建Dockerfile 新建文件夹zookeeper、kafka、kafka-manager，并添加相应的Dockerfile zookeep</description>
        
        <dc:creator>wangjinbao</dc:creator>
        
        
        
        
          
            
              <category>knowledge</category>
            
          
        
        
          
            
              <category>kafka</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
